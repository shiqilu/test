Python 3.6.7rc2 (v3.6.7rc2:4893861ab5, Oct 13 2018, 17:34:23) [MSC v.1900 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license()" for more information.
>>> >>> print 'Hello,World'
SyntaxError: Missing parentheses in call to 'print'. Did you mean print('Hello,World')?
>>> print("Hello,World")
Hello,World
>>> print('Hello,World')
Hello,World
>>> #print("Hello,world")在3版本和2版本之间的区别是需要在对象外面添加括号，否则是默认有语法错误，不过是单引号还是双引号影响不太大
>>> 3
3
>>> 333333333333333333333333333333333333333
333333333333333333333333333333333333333
>>> 33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
>>> #3版相比2版中长数字会直接照原数字输出，不会再加入L来表示
>>> 3.333333
3.333333
>>> id(3)#id是专门用来查找对象在内存中的地址的一个函数
1748527936
>>> id(3)
1748527936
>>> id(3.0)
2231160542672
>>> #不知道是否因为电脑系统不同，或者品牌原因，id与书中不一致
>>> type3
Traceback (most recent call last):
  File "<pyshell#13>", line 1, in <module>
    type3
NameError: name 'type3' is not defined
>>> type(3)
<class 'int'>
>>> type'3'
SyntaxError: invalid syntax
>>> type'3
SyntaxError: EOL while scanning string literal
>>> #目前来说，括号是必须用在对象上的
>>> type(3)
<class 'int'>
>>> type(3.0)
<class 'float'>
>>> # int指对象是整数类型，flote指对象是浮点型，结果是只读的
>>> x=5
>>> x
5
>>> x=6
>>> x
6
>>> #对象有类型，变量无类型，x在这里只作为一个标签，用来贴在不同的对象上
>>> 3+5
8
>>> (3+5)
8
>>> '3+5'
'3+5'
>>> ('3+5')
'3+5'
>>> '(3+5)'
'(3+5)'
>>> type'3+5'
SyntaxError: invalid syntax
>>> type(3+5)
<class 'int'>
>>> type('3+5')
<class 'str'>
>>> #不加引号的时候，3+5属于整数型，加了引号之后，属于字符串
>>> 3*4+3
15
>>> 10/2+1
6.0
>>> #符合四则运算法则，但是整数除法中出现了小数
>>> 10/2
5.0
>>> 4+2
6
>>> 3.0+2
5.0
>>> #浮点数与整数相加之后结果也是浮点数
>>> 3.0*3
9.0
>>> 3*3
9
>>> #浮点数与整数相乘之后结果也是
>>> 2646477837468484362526284729482984729834728973649827346982734982734*1827368757164173874687649887368723851837651876458749876593487568473
4836090916717314817075787923506790789261158620794923798228494031764430381797168105510804367571957567104100276771128498998157297745182
>>> #2版中会将大数或者长数字转化成L型，3版直接给结果
>>> 2**1000
10715086071862673209484250490600018105614048117055336074437503883703510511249361224931983788156958581275946729175531468251871452856923140435984577574698574803934567774824230985421074605062371141877954182153046474983581941267398767559165543946077062914571196477686542167660429831652624386837205668069376
>>> #即使是次幂计算也是如此
SyntaxError: invalid syntax
>>> >>> print 'Hello,World'
SyntaxError: Missing parentheses in call to 'print'. Did you mean print('Hello,World')?
>>> print("Hello,World")
Hello,World
>>> print('Hello,World')
Hello,World
>>> #print("Hello,world")在3版本和2版本之间的区别是需要在对象外面添加括号，否则是默认有语法错误，不过是单引号还是双引号影响不太大
>>> 3
3
>>> 333333333333333333333333333333333333333
333333333333333333333333333333333333333
>>> 33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
33333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
>>> #3版相比2版中长数字会直接照原数字输出，不会再加入L来表示
>>> 3.333333
3.333333
>>> id(3)#id是专门用来查找对象在内存中的地址的一个函数
1748527936
>>> id(3)
1748527936
>>> id(3.0)
2231160542672
>>> #不知道是否因为电脑系统不同，或者品牌原因，id与书中不一致
>>> type3
Traceback (most recent call last):
  File "<pyshell#13>", line 1, in <module>
    type3
NameError: name 'type3' is not defined
>>> type(3)
<class 'int'>
>>> type'3'
SyntaxError: invalid syntax
>>> type'3
SyntaxError: EOL while scanning string literal
>>> #目前来说，括号是必须用在对象上的
>>> type(3)
<class 'int'>
>>> type(3.0)
<class 'float'>
>>> # int指对象是整数类型，flote指对象是浮点型，结果是只读的
>>> x=5
>>> x
5
>>> x=6
>>> x
6
>>> #对象有类型，变量无类型，x在这里只作为一个标签，用来贴在不同的对象上
>>> 3+5
8
>>> (3+5)
8
>>> '3+5'
'3+5'
>>> ('3+5')
'3+5'
>>> '(3+5)'
'(3+5)'
>>> type'3+5'
SyntaxError: invalid syntax
>>> type(3+5)
<class 'int'>
>>> type('3+5')
<class 'str'>
>>> #不加引号的时候，3+5属于整数型，加了引号之后，属于字符串
>>> 3*4+3
15
>>> 10/2+1
6.0
>>> #符合四则运算法则，但是整数除法中出现了小数
>>> 10/2
5.0
>>> 4+2
6
>>> 3.0+2
5.0
>>> #浮点数与整数相加之后结果也是浮点数
>>> 3.0*3
9.0
>>> 3*3
9
>>> #浮点数与整数相乘之后结果也是
>>> 2646477837468484362526284729482984729834728973649827346982734982734*1827368757164173874687649887368723851837651876458749876593487568473
4836090916717314817075787923506790789261158620794923798228494031764430381797168105510804367571957567104100276771128498998157297745182
>>> #2版中会将大数或者长数字转化成L型，3版直接给结果
>>> 2**1000
10715086071862673209484250490600018105614048117055336074437503883703510511249361224931983788156958581275946729175531468251871452856923140435984577574698574803934567774824230985421074605062371141877954182153046474983581941267398767559165543946077062914571196477686542167660429831652624386837205668069376
>>> #即使是次幂计算也是如此
SyntaxError: invalid syntax
>>> print（Hello，World）
SyntaxError: invalid character in identifier
>>> print(Hello,World)
Traceback (most recent call last):
  File "<pyshell#3>", line 1, in <module>
    print(Hello,World)
NameError: name 'Hello' is not defined
>>> #在打印过程中也不能除去单引号或者双引号，会出现未定义的错误，另外大数不能计算太大，之前的3**129689623算了很久也没结果，而且接下去很久也看起来不像有结果的样子。3版本中的int型已经改成精确位数了，所以去掉了L表示的类型
>>> 
